var tipuesearch = {"pages": [{'title': 'member', 'text': '成員: \n 40523113 \xa0 吳宜賢 \n 40623252 \xa0 李展齊 \n 40723101 \xa0 沈易萱 \n 40723103 \xa0 林晏瑩 \n 40723107 \xa0 王晨祐 \n 40723114 \xa0 杜永瀚 \n 40723119 \xa0 林哲緯 \n 40723122 \xa0 施東勝 \n 40723124 \xa0 徐敬倫 \n 40723125 \xa0 張詠全 \n 40723152 \xa0 陳俊任 \n 40723155 \xa0 吳明峰 \n \n', 'tags': '', 'url': 'member.html'}, {'title': 'Final Focus', 'text': '1.動靜態網頁維護 \n 2.Reveal簡報 \n 3.pelican網誌 \n 註:要協同編輯網誌，每位組員都要有一個獨立的Leo editor\xa0 \n', 'tags': '', 'url': 'Final Focus.html'}, {'title': 'week practice', 'text': 'week10-11 \n \n 以分組協同方式整理教科書內容: \n \n 2015- Space Modeling with SolidWorks and NX https://link.springer.com/book/10.1007/978-3-319-03862-9 \n 各組員負責將課程重點與零組件繪圖練習, 加上解說與操作過程影片, 放入分組倉儲中. \n 2008- The Engineering Design Revolution The Engineering Design Revolution \xa0(a.k.a. cad_history.pdf) \n 各組員負責編寫 Solidworks, NX, Inventor 與 Creo (Pro/E) 的開發緣起, 套件安裝與設定流程, 以及利用各套件執行零組件繪圖的相關差異與特點分析, 分別放入分組倉儲中. \n \n \n Github 分組倉儲如何 fork, 如何建立正向 pull requests, 如何反向 pull requests, 組長如何處理各組員的 pull requests 內容, 如何處理 content.htm, reveal 簡報以及 pelican 網誌 markdown 中的改版衝突. (含 \xa0 GitExtensions 導入 ) \n \n \n NX12 零組件繪圖與 NXOpen Python 檔案的建立與應用.  ( http://mde.tw/cad2019/content/Task2.html ) \n \n \n 各組員分別執行 V-rep 與 Webots Tutorial, 分別利用 Solvespace 與 NX 建立零組件轉入, 比較兩者差異  ( http://mde.tw/cad2019/content/Task3.html ) \n \n \n 分組執行 \xa0 http://mde.tw/cad2019/content/Project.html \xa0 期末專案 \n \n \n \n week12 \n \xa0 NX 零組件繪圖 \n 請根據 \xa0 http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf \xa0 的導引, 透過分組協同完成各章節內容閱讀與操作練習, 並將練習影片加上說明字幕, 以 校名+系名+課程名稱+分組任務名稱+學號作為標題 , 上傳 Youtube 後, 分別嵌入個人與分組網頁中. \n 使用 NX3 者可以參考 \xa0 http://mde.tw/cad2019/downloads/UG-NX3-Tutorial.pdf \n 目的在能使用 NX 建立 \xa0 http://mde.tw/cad2019/content/Task2.html \xa0 完成越野車零組件的設計與繪圖, 並利用 CAE 模組進行零件的應力分析. \n Webots 與 V-rep Tutorial \n 請各組員在第十三週之前完成: \n https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots \n 與 \n http://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm \n 並將操作過程製作成帶字幕影片, 上傳 Youtube 後, 分別嵌入個人與分組網站, 且將心得與兩者的比較內容放在個人與分組網誌中. \n \n week13 \n 每週將分別就課程任務執行結果與心得, 在個人與分組 Reveal 中進行各週簡報, 以作為期末自評與互評成績評定之參考. \n', 'tags': '', 'url': 'week practice.html'}, {'title': 'week12網址與心得', 'text': '40523113 \xa0 吳宜賢 \n \n 40623252 \xa0 李展齊 \n 40723101 \xa0 沈易萱 \n 40723103 \xa0 林晏瑩 \n 網址: https://www.youtube.com/watch?v=tgTjdzZdQTk (NX12之操作) \n \n 心得: \n 對於剛接觸兩款軟體的新手而言， NX12 為接受度較高的高階套件， 模擬與加工程序與應力分析和繪製3D草圖為該套件之特色， 並且指令相對於簡潔明瞭，運用在繪製草圖或是物件分析的部分都做得相對周到，儘管模擬加工方面之限制比較多之外，整體操作上較為順手。 \n 另一方面 Webots 主要為3D模擬套件，實際使用物體去模擬移動位置，可變換出不同場景已供參考，在設定操作步驟方面相對繁瑣，而測試機器人與機械傳動件作動為該套件主要特性，也可 指定對象的圖形和物理屬性。 \n 註 : 圖形屬性包括對象的形狀，尺寸，位置和方向，顏色和紋理。 \n 兩者套件比較下，個人偏向使用NX操作，因操作明瞭標示明顯，各指令也會給予相對詳細的解說，是新手也能操作順手的軟體。 \n 40723107 \xa0 王晨祐 \n \n 心得 :\xa0 第一次使用nx12繪圖還有些不習慣，經過電子書的說明跟閱讀後才懂得如何約束草圖上的線，比起solvespace的操作nx12的內容更加複雜也擁有比較多的應用可以使用，例如模擬與加工程序與應力分析這些功能可以使用，比起solvespace 跟 inventor這些繪圖程式，nx12的功能雖然比較繁多相反的需要更多時間去摸索跟熟悉。 \n 40723114 \xa0 杜永瀚 \n https://www.youtube.com/watch?v=LPlDoJRslU0 \n \n 心得: \n 在使用NX12的時候,一開始很不習慣,因為NX12為高階cad軟體,所以花了一些時間摸索,用完NX12發現它的功能很強大也很多,但操作起來也變得相當複雜,之前常用SOLID WORK,發現SOLID WORK用起來是比NX12好上手,但NX12功能較多,也較廣泛. \n 40723119 \xa0 林哲緯 \n 40723122 \xa0 施東勝 \n 40723124 \xa0 徐敬倫 \n 40723125 \xa0 張詠全 \n \n 心得:第一次使用NX12繪製，還不習慣只能做到簡單的特徵，在這本 NX 12 for Engineering Design 原文書中可以學到很多進階的操作，目前我只讀到第2章就能繪製成這樣，在讀下去就不得了! \n 40723152 \xa0 陳俊任 \n 40723155 \xa0 吳明峰 \n', 'tags': '', 'url': 'week12網址與心得.html'}, {'title': 'week13', 'text': '第13週-Solvespace 與 NX12 參數繪圖與 V-rep 結合應用 \n 重點筆記: 講解NX3與NX12之間特性、差異 \n NX3 使用輸出VRML[選VRML2.0，轉入Webots(副檔名.wrl)] 並勾選選項  1.output lights  2.output matenals  3.recursive multi file 註 :  1.imput VRML為Webots打開之檔案類型  2.solvespace無法轉成wrl檔  3.wrl檔為文字檔   NX12 重要檔案  1.NXASSEMBLY(作用為轉檔)=IGES也是轉檔  2.NXBIN  3.UGII 註:  1.Journal=畫圖中並同時儲存   比較差異 \n NX3 =較陽春，但簡便，可執行放在UGII檔裡 \n NX12 =規格、功能性相對齊全，但為了配合Windows 7之後的升級改版，直接將大部分檔案放在NXBIN裡，不過有些重要檔案仍儲存在UGII裡。 \n HOW TO\xa0 將NX12程式語言改成Python \n 改寫位置之操作順序: File>Preferences>User interface>Tools \n 原先Journal language中將Visual Basic選項改為Python選項 \n 目的: 主要方面日後藉由程式去操作NX12 \n', 'tags': '', 'url': 'week13.html'}, {'title': 'week14', 'text': '任務 : \n 同步 啟動跨組自評與互評機制 , 並針對課程內容所要求的任務要項逐一查驗各組員學習成效, 希望在鼓勵組員公開倉儲內容與教學影片互相學習之餘, 也能達到公平計分的目的，同時也強制性規定需作筆記。 \n 在第十四週也逐步介紹NX、Solvespace、Webots的執行與互動 \n Q.如何用SciTe執行Python，與NX、Solvespace、Webots互動 \n A : 程式由外部控制虛擬、實體(大略贅述，詳情敘述只紀錄關鍵字) \n 片刻紀錄 : \n 1 .關鍵字:nx run journal=用python執行，但沒跑出原始碼。 \n 2 .需放Download裡(只是demo)=可直接給路徑<path:path>名稱(yrl.學號)，使學號在路徑連結。 \n 3 .cmsimde@...=為release轉出版本，會改變數字。 \n', 'tags': '', 'url': 'week14.html'}, {'title': 'week15', 'text': '\n \n \n \n', 'tags': '', 'url': 'week15.html'}, {'title': 'week17', 'text': '\n 題目一: (各分組協同製作題) \n 請各組組長將 \xa0 http://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm \xa0 與 \xa0 https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment \xa0 等兩份教學內容, 平均分配給各組員, 經由翻譯了解操作過程後, 在各分組網站中, 以 "W17 協同任務" 作為頁面標題, 登錄各組員的分配表, 採用中英文並列的方式呈現兩份教學內容. \n 題目二: (各組員獨立製作題) \n 請參考下列影片中的機構設計, 從 \xa0 https://github.com/mdecourse/cad2019/tree/master/downloads/solvespace/curiosity/ \xa0 擷取草圖設計概念, 利用 Solvespace 或 NX12 將原本車身與主連桿所採用的馬達鎖定設計, 改為機械阻尼(彈簧與極限定位)設計, 完成各零件的尺寸標示工程圖與 Engineering Bill of Material 後轉入 V-rep, 將所有 .slvs (或 .prt) 與 .ttt 檔案放入個人倉儲 downloads 目錄中的 w17/curiosity 目錄後, 將操作過程紀錄於個人網站中的 "W17 個人任務" 頁面中, 並嵌入一個至多 2 分鐘, 帶字幕的影片, 介紹說明操作過程與所完成的結果. \n \n 完成上述兩題後, 請各組員將相關連結(包括題目一的個人貢獻連結與題目二的倉儲連結、網頁連結與影片連結), 放入下列回應中, 並針對所碰到的問題進行說明討論. \n', 'tags': '', 'url': 'week17.html'}, {'title': 'Introduction', 'text': '一 \n 編寫1- solidworks(中階) \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa02-Nx (高階) \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa03-inventor(中階) \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa04-Creo(proe)=oneshape 的開發起源(高階)-已被併購 \n \xa0 \xa0 \xa0 \xa0  \xa0 \xa0註 :中階曲面不強 \n 安裝套件 設定流程 分析各套件零組件差異與特點，放入倉儲。 \n 市占比例: \n solidworks(25%)沒雲端 \n nx(不超過3%) \n inventor(35%) \n creo(pro/e)(35%) \n 二 \n 倉儲如何fork html reveal pelican markdown 中改版衝突 \n 註 :組員需fork 及正向pull request (組長為管理者) \n Week Practice \n', 'tags': '', 'url': 'Introduction.html'}, {'title': '編寫軟體介紹', 'text': 'NX特點 \n •\xa0 \xa0 3D 零件建模使用協力廠商的 CAD 模型。 利用同步建模技術，可直接編輯零件模型，並準備讓零件進入NC編程 。 \n • \xa0 NX 提供建立 NC 操作之前快速進行分析的能力。 \n • \xa0 建模、組立件與製圖-NX 提供了 CAD 功能組合。這些功能已納入 NX CAM 之中，可供用來建立零件、坯件形狀、夾治具或工具機模型以進行模擬。 \n • 模擬技術融合到結構、動作、熱力、流體、多重物理與最佳化解決方案 \n 註 :1-繪圖過程中如有需修改，可直接改寫程式碼，不須改圖。 \n \xa0 \xa0 \xa0 \xa02-產生應力分析，並分析最佳化。 \n CAD \xa0 \n • 製造流程從零件設計資料輸入開始，通常是 3D CAD 模型，在某些情況下也可能是 2D圖面。通常會需要用到 3D CAD 軟體以準備或調整零件設計模型。 \n \n CAD 應用程式也可以用來設計與組合夾治具。NX CAM 套件內含完全整合的 CAD 功能，全部納入同一套 NX 系統之中。 CAM \xa0 \n ======= \n NX特點 \n • \xa0 \xa0 3D 零件建模使用協力廠商的 CAD 模型。 利用同步建模技術，可直接編輯零件模型，並準備讓零件進入NC編程 。 \n • \xa0 NX 提供建立 NC 操作之前快速進行分析的能力。 \n • \xa0 建模、組立件與製圖-NX 提供了 CAD 功能組合。這些功能已納入 NX CAM 之中，可供用來建立零件、坯件形狀、夾治具或工具機模型以進行模擬。 \n • 模擬技術融合到結構、動作、熱力、流體、多重物理與最佳化解決方案 \n 註 :1-繪圖過程中如有需修改，可直接改寫程式碼，不須改圖。 \n \xa0 \xa0 \xa0 \xa02-產生應力分析，並分析最佳化。 \n CAD \xa0 \n • 製造流程從零件設計資料輸入開始，通常是 3D CAD 模型，在某些情況下也可能是 2D圖面。通常會需要用到 3D CAD 軟體以準備或調整零件設計模型。 \n \n CAD 應用程式也可以用來設計與組合夾治具。NX CAM 套件內含完全整合的 CAD 功能，全部納入同一套 NX 系統之中。 CAM \xa0 \n • NX CAM 包含 NC 編程、後處理及工具機模擬。 \n \n • 套件Siemens 為進階工具機控制器技術及驅動設備領域的公認領導廠商。 提供 CAD-CAM-CNC 流程鏈支援，讓您最新的工具機投資價值發揮到極致。 \n \n 電子書: \n \n https://docs.plm.automation.siemens.com/docs/nx/12.0.1/en_US/release_notes.pdf \n \n 1. SMP \n Symmetric Multiprocessing (SMP) is supported in NX mostly via Parasolid, although a small number \n \n 翻譯:\n NX主要通過Parasolid支持對稱多處理（SMP），儘管數量很少 2. 目錄 The new NX runtime directory does not contain all binaries and executables. Only the most frequently used files from the following directories have been moved: •  UGII •  UGMANAGER •  STEP203UG •  STEP214UG •  PVTRANS •  MACH Other files will also be moved over time. However, some applications, such as NX Nastran, will not be moved. \n=======\n 1.SMP \n Symmetric Multiprocessing (SMP) is supported in NX mostly via Parasolid, although a small number \n \n 翻譯:\n NX主要通過Parasolid支持對稱多處理（SMP），儘管數量很少 2.目錄 The new NX runtime directory does not contain all binaries and executables. Only the most frequently used files from the following directories have been moved: •  UGII •  UGMANAGER •  STEP203UG •  STEP214UG •  PVTRANS •  MACH Other files will also be moved over time. However, some applications, such as NX Nastran, will not be moved. \n 翻譯: \n 新的NX運行時目錄不包含所有二進製文件和可執行文件。 僅移動了以下目錄中最常用的文件：\n • UGII\n • UGMANAGER\n • STEP203UG\n • STEP214UG\n • PVTRANS\n • 馬赫\n其他文件也會隨著時間的推移而移動。但是，某些應用程序（例如NX Nastran）將\n不動。 \n \n 3. 版本 Historically, the NX product release has included the refile utility, which was created many years ago This utility was never mandatory when performing NX upgrades. NX product enhancements and improvements that are delivered and available in the current NX release make NX upgrades much faster and easier, so the refile utility is now obsolete.  the refile utility is retired starting in NX 12.0.1. The documentation for the utility has already been removed in NX 12. In place of the refile utility, standalone utilities will be introduced that incorporate non-version-up related options and future NX batch processes. Teamcenter names and values of properties localized \n 3.版本 Historically, the NX product release has included the refile utility, which was created many years ago This utility was never mandatory when performing NX upgrades. NX product enhancements and improvements that are delivered and available in the current NX release make NX upgrades much faster and easier, so the refile utility is now obsolete.  the refile utility is retired starting in NX 12.0.1. The documentation for the utility has already been removed in NX 12. In place of the refile utility, standalone utilities will be introduced that incorporate non-version-up related options and future NX batch processes. Teamcenter names and values of properties localized \n • there is now the capability to have the names and values of properties translated and displayed in multiple languages.  \n • the Part Family template spreadsheet \n \xa0 \n • New Item \n • Save \n • Import, and component properties dialog boxes. \n \n 翻譯: \n 從歷史上看，NX產品版本包含了refile實用程序，該實用程序是多年以前創建的， 執行NX升級時，該實用程序從不是必需的。  當前NX中提供和可用的NX產品增強和改進 發布版本使NX的升級變得更快，更容易，因此refile實用程序現在已過時。 \n從NX 12.0.1開始，重新歸檔實用程序已停用。該實用程序的文檔已經在NX 12中已刪除。\n代替refile實用程序，將引入合併非版本升級的獨立實用程序，其中包含與非版\n本相關選項和將來的NX批處理過程。\n Teamcenter名稱和屬性值已本地化 \n • 現在可以轉換屬性的名稱和值，並 以多種語言顯示。 \n • 零件族模板電子表格 \n • 新選項 \n • 保存 \n • “導入”和“組件屬性”對話框。 4. 尺寸 When you run the ug_convert_part tool to convert an NX 12 part from mm to inch, the settings in the Unit Manager dialog box do not display the converted units. This is as intended. 翻譯: \n 當運行ug_convert_part工具將NX 12零件從毫米轉換為英寸時，“單位管理器”對話框中的設置不會顯示轉換後的單位。 這是預期的。 Solid Work特點 1. 介面 -根據工作需求，自行定義SOLIDWORKS環境 2. 繪圖 - 2D設計會自動與3D模型連動，當修改3D模型時，2D的設計草圖就會自動更新 \n • “導入”和“組件屬性”對話框。 4.尺寸 When you run the ug_convert_part tool to convert an NX 12 part from mm to inch, the settings in the Unit Manager dialog box do not display the converted units. This is as intended. 翻譯: \n 當運行ug_convert_part工具將NX 12零件從毫米轉換為英寸時，“單位管理器”對話框中的設置不會顯示轉換後的單位。 這是預期的。 Solid Work特點 1. 介面 -根據工作需求，自行定義SOLIDWORKS環境 2. 繪圖 - 2D設計會自動與3D模型連動，當修改3D模型時，2D的設計草圖就會自動更新 \n 自動創建設計的材料清單（BOM）和註解，包括尺寸和公差專家工具。 \n 3. 排除故障 - 設計發生衝突，SOLIDWORKS SketchXpert功能，會協助自動進行問題辨識和故障排除 可大幅減少設計誤差導致的重工和時間、成本上的浪費 4. 曲線 之圖稿與元件設計比其他軟件還好用 5. 成本估算 - 擁有自動成本計算工具，能針對設計的零件製造成本做出估算，可以輸入特定的製造成本和數據，如材料、人工、機器運行速度和損耗，以及安裝成本 \n \n \n \n \n \n \n \xa0 \n 附註 ： (1) SOLIDWORKS不支援Windows家用版 (2) 建議使用Microsoft Windows、Office和IE瀏覽器的最新版本 (3) 不支援Microsoft Office 即點即用(Click-To-Run)功能 \n 附註： (1) SOLIDWORKS不支援Windows家用版 (2) 建議使用Microsoft Windows、Office和IE瀏覽器的最新版本 (3) 不支援Microsoft Office 即點即用(Click-To-Run)功能 \n \n', 'tags': '', 'url': '編寫軟體介紹.html'}, {'title': 'Introduction Pull request', 'text': '正反向拉回差別在於資料傳遞的方向。 \n 假設是正向拉回，是 組員(無權限)將資料推送回組別倉儲後給組長(管理員)確認資料後使其合併 。 \n 反之，反向拉回是 管理者將權限給予組員讓他們擁有可merge的權力 ，不過在這邊很常因為組員推送問題產生衝突，並且解決方式較為繁瑣，因此這學期並不推薦使用反向拉回的方式管理組別倉儲。 \n 以下為正向拉回範例: \n step1 \n 先點入自己分組倉儲之pull request，出現畫面為(圖1) \n \n 這時出現merge問題，但仍可以pull request，並按下Create \n pull request之按鍵 \n step2 確認完再按下標題與傳遞內容後再按下 Create  pull request \n step3 出現畫面代表衝突檔案，需由管理員(組長)確認資料並合併之後處理衝突版面並再次推送， 藉此merge完成 \n \n \n', 'tags': '', 'url': 'Introduction Pull request.html'}, {'title': 'NX 12 for Engineering Design', 'text': 'http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf \n 前言 \n \n NX是Siemens PLM Software提供的世界上最先進且緊密集成的CAD / CAM / CAE產品開發解決方案之一。 NX涵蓋了整個產品開發範圍，可為各種規模的企業提供巨大的價值。 它簡化了複雜的產品開發，從而加快了將產品推向市場的過程 \n 第1章簡介 \n 現代製造環境可以通過提供的種類越來越多的產品，小批量和更高的質量在提高全球競爭的背景下的模式為特徵。除非行業以更高的質量，更低的成本和更短的交付時間推出新產品，否則它們就無法在全球競爭中生存。國際競爭激烈，技術工人的供應減少。 隨著計算能力的巨大變化和用於設計和生產的軟件工具的廣泛可用性，現在工程師都使用計算機輔助設計（CAD），計算機輔助製造（CAM）和計算機輔助工程（CAE）系統來自動化設計和生產過程。現在這些技術每天都用於各種不同的工程任務。 以下是產品實現過程中如何使用CAD，CAM和CAE技術的簡要說明。 \n CAD / CAM / CAE的定義 \n • 計算機輔助設計– CAD \n \xa0 \xa0 \xa0 CAD技術是涉及使用計算機系統協助創建，修改，分析和優化設計。 \n • 計算機輔助製造– CAM \n \xa0 \xa0 CAM技術涉及到計算機系統規劃管理，並與工廠的生產資源的控制通過計算機接口的製造業務。 \n • 計算機輔助工程– CAE \xa0 \xa0 CAE技術使用計算機系統來分析CAD創建的產品的功能，從而使設計人員可以模擬和研究產品的性能，從而可以優化和優化設計。 \n 這本原文書是針對有興趣學習如何使用NX 12設計機械零件和組件的學生和工程師編寫的。學習使用NX 12對於學習如何使用其他CAD系統（例如PRO-E和CATIA）也將非常有價值。\xa0 \n 第2章 介紹了從開始會話到熟悉NX的NX 12基本知識。通過練習基本功能（如打印，保存和退出）來佈局12。它還給出了簡短的描述坐標系圖層，各種工具箱和其他重要命令在後面的章節中使用。 \n 第3章 介紹了素描的概念。它描述瞭如何創建草圖並給出幾何和尺寸約束。從今天開始，本章非常重要組件的幾何形狀非常複雜，僅憑基本特徵很難建模。 \n 第4章 開始零件的實際設計和建模。它描述了不同的功能例如參考特徵，掃描特徵和原始特徵，以及如何使用這些特徵創建設計。對特徵執行各種特徵操作。 \n 第5章 中學習如何從零件模型創建工程圖。在本章中，我們通過添加視圖，標註零件圖紙尺寸來演示如何創建圖紙，以及修改圖形中的各種屬性，例如文本大小，箭頭大小和公差。 \n 第6章 介紹了裝配建模的概念及其術語。它描述了Top-向下建模和自下而上建模。我們將使用自下而上的模型進行組裝組件變成產品。 \n 第7章 介紹了自由格式建模。曲線和平滑曲面的建模方法將被演示。 \n 第8章 概述了NX 12中提供的Design Simulations的簡要介紹。 \n 第9章 將是在製造中實施設計模型的實時經驗加工環境。本章介紹工具的生成，驗證和模擬創建CNC（計算機數字代碼）以從多軸生產設計零件的路徑甚至先進的CNC機器。每章中使用的示例和練習問題都經過精心設計，以使它們最終得以應用組裝在本章中。由於這項獨特的功能，您應該保存所有的模型在每一章中都有創建。 \n 資料連結 \n http://mde.tw/cad2019/content/NX.html \n<<<<<<< HEAD\n', 'tags': '', 'url': 'NX 12 for Engineering Design.html'}, {'title': 'Deal with problems', 'text': 'Q: 當倉儲git pull+分組倉儲網址後發現無法正常開啟近端 \n A:將倉儲start鍵放入文字編輯器並且查看，發現有多一個分號（：），將分號刪除並儲存後即可進入近端 \n BEFORE \n \n \n AFTER \n \n \n Reason:因為有人倉儲本身是壞的，因此當其他人gitpull時會讓他人倉儲錯誤，造成倉儲近端損毀。 \n \n \n Q: 為什麼用了git pull 分組倉儲網址完無法正確連結完成並進行改版 \n A:先將倉儲中最新版本反向拉回（左為本身，右為管理者）並且git commit git push上去後再次進入近端即可改為最新版本進行改版推送 \n EX: \n \n Reason:有可能因為尚未推送回分組倉儲使最新版本與自身隨身碟中可攜系統舊版沒有連結成功，因此git pull 分組倉儲網址完進入近端依然還是舊版 \n \n \n Q 為什麼管理員merge完會使倉儲爆掉，產生舊版與新版衝突(如下) \n \n A: \n 在這次解決問題中，由於近端未有衝突問題並且使用正常，進入近端按下轉靜態後再次git push上傳即可恢復網頁 \n RESEASON (原因 ): \n 有可能是因為其中一位倉儲推送上去使用到git pull的緣故使得新舊版產生合併問題，造成有兩個版面的緣由 \n \n<<<<<<< HEAD <<<<<<< HEAD ======= >>>>>>> f07ec51da8d9884493ffdfe7f3272c81c6e7809c\n Q 進入近端卻直接跳下一行並沒有做任何作動 \n EX: \n D:\\87\\cmsimde>python wsgi.py \n D:\\87\\cmsimde> \n A: \n 將啟動程式按鍵(start_mdecourse.bat)拖曳到SciTe裡，並將裡面其中一行程式多餘的開頭程式 %path% 刪除，重新啟動(按下Stop.bat)即可恢復正常。 \n \n 如上圖所示，但前面的%path%以更改完畢，因此範例中的程式是已經改善完畢的。 \n RESEASON(原因 ): \n 因為%path%為進入近端之bug，需查看是否修正完畢。 \n', 'tags': '', 'url': 'Deal with problems.html'}, {'title': 'webots', 'text': '\n 參考資料 http://mde.tw/cad2019/content/Webots.html \n webots:有五種程式可運用，ex:C、C++、Python、Java、MATLAB，為零組件組合軟件。 \n 註解 :建立模型孔需有間隙(SOLVESPACE)，因轉出零件檔案(零件件數有多少，就轉多少次)，再轉入WEBOTS。 \n 目前因WEBOTS還是商用化，因此檔案仍停留在1999年。 \n', 'tags': '', 'url': 'webots.html'}, {'title': 'webots安裝', 'text': '下載位置: Webots_2019b_rev1.7z \n 1.新增啟動器 \n \n 2. 執行路徑設定 \n set path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n %path_webots%; \n \n \n 3.設定抓取的檔案 \n start webots.exe%*\n \n \n 4.將檔案丟入啟動器底下 \n \n', 'tags': '', 'url': 'webots安裝.html'}, {'title': 'W17 協同任務', 'text': '翻譯原文書 \n', 'tags': '', 'url': 'W17 協同任務.html'}, {'title': 'Webots User Guide', 'text': '翻譯: 用戶指南手冊 \n Tutorial 2: Modification of the Environment (30 Minutes) In this tutorial, we will teach you how to create simple objects in the environment. The first step will be to create a ball which will interact with the environment. We will tackle several concepts related to the nodes: what is their meaning, how to create them, how they have to be affiliated, etc. Moreover we will see how to set up physics. \n Several kinds of nodes will be introduced. Their detailed definition can be found in Reference Manual. Having the nodes chart diagram in front of you, will also help understanding the nodes inheritance relationship. \n 翻譯: 教程2：修改環境（30分鐘） 教學如何在環境中創建雛形。第一步將創建一個與環境互動的球。我們將處理與節點有關的幾個概念：如何創建它們、如何關聯它們等等。 此外，還需將了解如何設置物理學。 \n 以下將介紹幾種節點。詳細定義可在參考手冊中找到。擁有節點圖表，也將助於理解節點繼承關係。 \n Index A New Simulation Modifying the Floor The Solid Node Create a Ball Geometries DEF-USE Mechanism Add Walls Solution: World File Efficiency Conclusion \n 翻譯: \n 索引 新建模擬 修改地板 節點 創建球體 幾何形狀 定義使用機制 添加牆 解決方案：世界文件 效率 結論 \n \n A New Simulation First we create a new simulation based on the one created in Tutorial 1. \n Hands-on #1: Make sure the my_first_simulation.wbt world file is open, and that the simulation is paused and is at a virtual time of 0. Using the File / Save World As... menu, save the simulation as obstacles.wbt. \n 翻譯: 新建模擬 首先根據教程1中創建的模擬創建一個新的模擬。 \n 步驟1：確保打開了my_first_simulation.wbt文件，並且模擬已暫停並且處於虛擬時間0。使用“文件/另存世界為...”菜單，保存the simulation為obstacles.wbt。 \n \n Modifying the Floor The default RectangleArena PROTO defines a simple floor pinned on the static environment, i.e. without Physics node, and surrounded by walls. Other pre-built floors are available in the Webots objects library. We will now delete the RectangleArena node and add a simple floor that we will manually surround with walls later in this tutorial. \n Hands-on #2: To remove the RectangleArena, select it either in the 3D view or in the scene tree view with a left click and press the Delete key on your keyboard. Alternatively, you can right click on it in the 3D view and select Delete in the context menu (you can also use the context menu directly in the scene tree view). Select the TexturedBackroundLight node and click on the Add button. In the open dialog box, and choose PROTO nodes (Webots Projects) / objects / floors / Floor (Solid). \n The newly added Floor PROTO has a default size of 10mx10m, but it is possible to adjust its size, its position and texture by changing the corresponding fields. \n Hands-on #3: In the scene tree view select and expand the Floor. Modify the size field and set it to {1, 1} to resize it to 1mx1m. \n 翻譯: 修改地板 默認的RectangleArena PROTO定義一個固定在靜態環境上的Floor，即沒有Physics節點並且被牆壁包圍。 Webots對像庫中提供了其他預建樓層。現在，我們將刪除RectangleArena節點，並添加一個簡單的Floor，在本教程的後面部分將用牆手動將其包圍。 \n 步驟2：要刪除RectangleArena，在3D視圖或場景樹視圖中單擊鼠標左鍵選重物件，然後按下Delete鍵。 或者，可以在3D視圖中右鍵單擊它，然後在上下文菜單中選擇“刪除”（也可以直接在場景樹視圖中使用上下文菜單）。 選擇TexturedBackroundLight節點，然後單擊“添加”按鈕。 在打開的對話框中，然後選擇PROTO節點（Webots項目）/對象/ Floors / Floor（實心）。 \n 增添新的Floor PROTO的尺寸為10mx10m，也可以通過更改相應的字段來調整其大小，位置和紋理。 \n 步驟3：在場景樹視圖中，選擇並展開“Floor”。修改大小字段並將其設置為{1，1}以將其大小調整為1mx1m。 \n \n The Solid Node \n This subsection introduces the most important base node in Webots: the Solid node, from which many other nodes derive. \n A Solid node represents a rigid body, that is a body in which deformation can be neglected. The distance between any two given points of a rigid body remains constant in time regardless of external forces exerted on it. For example a table, a robot finger phalanx or a wheel are rigid bodies. Soft bodies and articulated objects are not rigid bodies. For example, a rope, a tire, a sponge or an articulated robot arm are not rigid bodies. However, an articulated entity can be broken into several rigid bodies. \n The physics engine of Webots is designed for simulating rigid bodies only. An important step, when designing a simulation, is to break up the various entities into separate rigid bodies. \n To define a rigid body, you will have to create a Solid node. Inside this node you will set up different sub-nodes corresponding to the characteristics of the rigid body. The following figure depicts a rigid body and its sub-nodes. The graphical representation of the Solid node is defined by the Shape nodes populating its children list. The collision bounds are defined in its boundingObject field. The graphical representation and the collision shape are often but not necessarily identical. Finally, the physics field defines if the object belongs to the dynamical or to the static environment. All these sub-nodes are optional, but the physics field needs the boundingObject to be defined. \n The Geometry box (in this figure) stands for any kind of geometrical primitive. In fact, it can be substituted by a Sphere, a Box, a Cylinder, etc. \n 翻譯: \n 節點 這部分介紹了Webots中的基礎節點：Solid節點，許多其他節點都來自Solid節點。 \n 實體節點表示剛體，即可以忽略變形的剛體。 剛體上任意兩個給定點之間的距離在時間上保持恆定，而不管施加在其上的外力如何。 例如，桌子，機械手指骨或輪子是剛體。 軟體和關節物體不是剛體。 例如，繩索，輪胎，海綿或關節式機械臂不是剛性體。 可將一個鉸接的實體分解為幾個剛體。 \n Webots的物理引擎僅設計用於模擬剛體。設計仿真時，重要的一步是將各個實體分解為單獨的剛體。 \n 要定義剛體，必須先創建一個節點。在此節點內，將根據剛體的特性設置不同的子節點。下圖描繪了剛體及其子節點。實體節點的圖形表示由填充其子級列表的Shape節點定義。碰撞範圍在其boundingObject字段中定義。圖形表示和碰撞形狀通常但不一定相同。最後，物理字段定義對像是屬於動態環境還是屬於靜態環境。所有這些子節點都是可選的，但物理場需要定義boundingObject。 \n 幾何框代表任何類型的幾何圖元。 實際上，它可以用球體，盒子，圓柱體等代替。 \n \n Create a Ball \n We will now add a ball to the simulation. That ball will be modeled as a rigid body as shown in this figure. A Sphere node will be used to define the geometry of our ball. \n Hands-on #4: In the scene tree view, select the last node and press the Add button. In the dialog, open the Bases nodes section and select the Solid node. In the scene tree view, expand the Solid node and select its children field. Add a Shape node to it by using the Add button. Select the appearance field of the Shape node and use the Add button to add a PBRAppearance node. \n Add a Sphere node as the geometry field of the newly created Shape node. Expand the PBRAppearance node and change its metalness field to 0 and its roughness field to 1. Add another Sphere node to the boundingObject field of the Solid. Finally add a Physics node to the physics field of the Solid. By modifying the translation field of the Solid node, place the ball in front of the robot (at {0, 0.2, -0.2} for example). Save the simulation. The result is depicted in this figure. tutorial_ball.png Your first rigid body in Webots. When the simulation is started, the ball hits the floor. You can move the ball by applying a force to it (Ctrl + Alt + left-click + drag). The contact points between the ball and the floor can be displayed as cyan lines by enabling the View / Optional Rendering / Show Contact Points menu item. \n 翻譯: 創建球體 將球添加到模擬中。如圖所示，該球將被建模為剛體。球體節點將用於定義球的幾何形狀。 \n 步驟4：在場景樹視圖中，選擇最後一個節點，然後按“添加”按鈕。在對話框中，打開“基礎節點”部分，然後選擇“實體”節點。在場景樹視圖中，展開“實體”節點並選擇其子字段。使用“添加”按鈕向其添加一個Shape節點。選擇“形狀”節點的外觀字段，然後使用“添加”按鈕添加一個PBRAppearance節點。 \n 將球體節點添加為新創建的形狀節點的幾何字段。 展開PBRAppearance節點，並將其金屬性字段更改為0，並將其粗糙度字段更改為1。 將另一個Sphere節點添加到Solid的boundingObject字段。 最後，將一個Physics節點添加到Solid的Physical字段。 通過修改實體節點的平移字段，將球放置在機器人的前面（例如，在{0，0.2，-0.2}處）。 保存模擬。 結果如圖所示。 tutorial_ball.png Webots中的第一個剛體。 當模擬開始時，球擊中地板。可通過向球施加力來移動球（Ctrl + Alt +左鍵單擊+拖動）。 \n 通過啟用“查看/可選渲染/顯示接觸點”菜單項，可以將球和地板之間的接觸點顯示為青色線。 \n Geometries To define the ball, we used the Sphere node in two different contexts: for the graphical representation (children) and to define the physical bounds (boundingObject). All Geometry nodes (such as the Sphere node) can be used in a graphical context. However, only a subset of them can be used in a physical context. The nodes chart diagram indicates which nodes are supported in each context. \n We are now going to reduce the size of the Sphere and increase its graphical quality by increasing the number of triangles used to represent it. \n Hands-on #5: For each Sphere node defining the ball, set its radius field to 0.05 and its subdivision field to 2. Refer to the Reference Manual to understand what the subdivision field stands for. \n 翻譯: \n 幾何形狀 為了定義球，在兩個不同的上下文中使用了Sphere節點：用於圖形表示（子代）和定義物理邊界（boundingObject）。 使得Geometry節點（例如Sphere節點）都可以在圖形上下文中使用。但它們的子集只能在物理環境中使用。 節點圖表顯示了每個上下文中支持哪些節點。 \n 將通過增加用於表示球體的三角形的數量來減小球體的大小並提高其圖形質量。 \n 步驟5：對於定義球的每個Sphere節點，將其半徑字段設置為0.05，並將其細分字段設置為2。 \n 請參閱《參考手冊》以了解細分字段的含義。', 'tags': '', 'url': 'Webots User Guide.html'}, {'title': 'Building a clean model tutorial', 'text': '', 'tags': '', 'url': 'Building a clean model tutorial.html'}]};